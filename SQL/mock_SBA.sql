-- 1.
SELECT o.ORDER_ID, o.USER_ID, o.STORE_ID
FROM ORDERS AS o JOIN USERS AS u ON o.USER_ID = u.USER_ID 
WHERE u.FIRST_NAME = 'Marion'

-- 2.
SELECT u.* 
FROM USERS AS u
LEFT JOIN ORDERS AS o ON u.USER_ID = o.USER_ID
WHERE o.USER_ID IS NULL;

-- 3.
SELECT i.NAME, i.PRICE
FROM ITEMS AS i
INNER JOIN ORDER_ITEMS AS oi ON oi.ITEM_ID = i.ITEM_ID 
GROUP BY oi.ITEM_ID
HAVING COUNT(oi.ITEM_ID) > 1;
-- Took me a hot minute to realize I couldn't use WHERE

-- 4
SELECT o.ORDER_ID, i.NAME, i.PRICE, oi.QUANTITY
FROM STORES AS s
INNER JOIN ORDERS AS o ON s.STORE_ID = o.STORE_ID 
INNER JOIN ORDER_ITEMS AS oi ON o.ORDER_ID = oi.ORDER_ID 
INNER JOIN ITEMS AS i ON oi.ITEM_ID = i.ITEM_ID
WHERE s.CITY = 'New York'
ORDER BY o.ORDER_ID;

-- 5
SELECT i.NAME AS ITEM_NAME, SUM(i.PRICE * oi.QUANTITY) AS REVENUE
FROM ORDER_ITEMS AS oi
INNER JOIN ITEMS AS i ON oi.ITEM_ID = i.ITEM_ID
GROUP BY oi.ITEM_ID ;

-- 6
SELECT s.NAME, COUNT(o.STORE_ID) AS 'ORDER_QUANTITY',
CASE 
	WHEN COUNT(o.STORE_ID) > 3 THEN 'High'
	WHEN COUNT(o.STORE_ID) > 1 THEN 'Medium'
	WHEN COUNT(o.STORE_ID) <= 1 THEN 'Low'
END
FROM STORES AS s
LEFT JOIN ORDERS AS o ON s.STORE_ID = o.STORE_ID
GROUP BY s.STORE_ID
ORDER BY `ORDER_QUANTITY` DESC;